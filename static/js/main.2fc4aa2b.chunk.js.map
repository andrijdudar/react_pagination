{"version":3,"sources":["components/Pagination/Pagination.tsx","items.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","i","push","className","cn","disabled","href","onClick","map","v","active","items","from","to","numbers","n","getNumbers","App","length","useState","setPerPage","setCurrentPage","startItem","endItem","itemsOnPage","filter","index","id","value","onChange","event","parseInt","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNAWaA,EAA8B,SAAC,GAS1C,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAkB,GAEfC,EAAI,EAAGA,GAAKJ,EAAeI,GAAK,EACvCD,EAAME,KAAKD,GAGb,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAChB,CAAEC,SAA0B,IAAhBV,IADd,SAGE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EAAoB,OAAS,QAC5CY,QAAS,WACa,IAAhBZ,GACFC,EAAaD,EAAc,IAPjC,oBAgBAK,EAAMQ,KAAI,SAACC,GAAD,OACR,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAAMd,IAD7C,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAOGA,KATEA,MAeX,oBAAIN,UAAWC,IAAG,YAChB,CAAEC,SAAUV,IAAgBE,IAD9B,SAGE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAAgB,OAAS,QACxDU,QAAS,WACHZ,IAAgBE,GAClBD,EAAaD,EAAc,IAPjC,wBChED,IAAMgB,ECFN,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQZ,KAAKa,GAGf,OAAOD,EDLYE,CAAW,EAAG,IAChCR,KAAI,SAAAO,GAAC,qBAAYA,MEEPE,EAAgB,WAC3B,IAAMxB,EAAQkB,EAAMO,OACpB,EAA8BC,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB0B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoB0B,EAApB,KACMC,EAAY5B,EAAUC,EAAcD,EACpC6B,EAAU7B,GAAWC,EAAc,GAAKD,EAExC8B,EAAc,WAClB,OAAOb,EACJc,QAAO,SAACxB,EAAGyB,GAAJ,OAAcA,GAASJ,GAAaI,EAAQH,GAAWtB,MAGnE,OACE,sBAAKE,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC2B,EAAY,EAD7C,cACoDA,EAAYE,IAAcN,OAD9E,eAC2FzB,EAD3F,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOlC,EACPmC,SAAU,SAAAC,GACRT,EAAe,GACfD,EAAWW,SAASD,EAAME,OAAOJ,MAAO,MAP5C,UAUE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACa,GACbY,EAAeZ,MAInB,6BACGe,IAAchB,KAAI,SAAA0B,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SAAoBA,aCzD9BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2fc4aa2b.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void;\n\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages: number[] = [];\n\n  for (let i = 1; i <= numberOfPages; i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item',\n        { disabled: currentPage === 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {\n        pages.map((v) => (\n          <li\n            className={cn('page-item', { active: v === currentPage })}\n            key={v}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${v}`}\n              onClick={() => onPageChange(v)}\n\n            >\n              {v}\n            </a>\n          </li>\n        ))\n      }\n\n      <li className={cn('page-item',\n        { disabled: currentPage === numberOfPages })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === numberOfPages ? 'true' : 'false'}\n          onClick={() => {\n            if (currentPage !== numberOfPages) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { getNumbers } from './utils';\n\nexport const items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { items } from './items';\n\nexport const App: React.FC = () => {\n  const total = items.length;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const startItem = perPage * currentPage - perPage;\n  const endItem = perPage * (currentPage + 1) - perPage;\n\n  const itemsOnPage = (): string[] => {\n    return items\n      .filter((i, index) => index >= startItem && index < endItem && i);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem + 1} - ${startItem + itemsOnPage().length} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              setCurrentPage(1);\n              setPerPage(parseInt(event.target.value, 10));\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(v) => {\n          setCurrentPage(v);\n        }}\n      />\n\n      <ul>\n        {itemsOnPage().map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}